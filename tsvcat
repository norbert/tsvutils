#!/usr/bin/env python
"""
Concatenates TSV-with-header files, aligning columns with the same name.
"""

from __future__ import print_function

import sys
import itertools
import argparse

import tsvutil
tsvutil.fix_stdio()


parser = argparse.ArgumentParser(prog='tsvcat', description=__doc__)
parser.add_argument('-a', '--alias', action='append', dest='alias_specs')
parser.add_argument('-d', '--drop', action='append', dest='drop_specs')
parser.add_argument('files', metavar='file', nargs='+',
                    type=argparse.FileType('rbU'))
args = parser.parse_args()


##########################################################################


def flatten(iter):
    return list(itertools.chain(*iter))


def stable_uniq(x):
    s = set()
    y = []
    for i in x:
        if i in s:
            continue
        s.add(i)
        y.append(i)
    return y


file_cols = [f.readline()[:-1].split('\t') for f in args.files]
all_cols = stable_uniq(flatten(file_cols))

aliases = {}
if args.alias_specs:
    for alias_spec in args.alias_specs:
        left, right = alias_spec.split('=')
        assert left != right
        assert right
        assert left in all_cols
        aliases[(right or '')] = left
        if right not in all_cols:
            all_cols[all_cols.index(left)] = right
        else:
            all_cols.remove(left)

if args.drop_specs:
    for drop_spec in args.drop_specs:
        for col in drop_spec.split(','):
            assert col in all_cols
            all_cols.remove(col)

print('\t'.join(all_cols))

for i, f in enumerate(args.files):
    cols = file_cols[i]
    for line in f:
        parts = line[:-1].split('\t')
        hash = {}
        for j in range(len(cols)):
            hash[cols[j]] = parts[j]
        out = []
        for col in all_cols:
            if col in hash:
                out.append(hash[col])
            elif col in aliases:
                out.append(hash[aliases[col]])
            else:
                out.append('')
        print('\t'.join(out).encode('utf-8'))
